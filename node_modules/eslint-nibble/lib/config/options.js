/**
 * @fileoverview Options configuration for optionator.
 * @author Ian VanSchooten
 */
'use strict';

//------------------------------------------------------------------------------
// Requirements
//------------------------------------------------------------------------------

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _optionator = require('optionator');

var _optionator2 = _interopRequireDefault(_optionator);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

//------------------------------------------------------------------------------
// Initialization and Public Interface
//------------------------------------------------------------------------------


exports.default = (0, _optionator2.default)({
  prepend: 'usage: eslint-nibble [file.js] [dir]',
  options: [{
    heading: 'Options'
  }, {
    option: 'help',
    alias: 'h',
    type: 'Boolean',
    description: 'Show help'
  }, {
    option: 'version',
    alias: 'v',
    type: 'Boolean',
    description: 'Outputs the version number'
  }, {
    option: 'ext',
    type: '[String]',
    default: '.js',
    description: 'Specify JavaScript file extensions'
  }, {
    option: 'config',
    alias: 'c',
    type: 'path::String',
    description: 'Use configuration from this file or shareable config'
  }, {
    option: 'cache',
    type: 'Boolean',
    default: 'false',
    description: 'Only check changed files'
  }, {
    option: 'cache-location',
    type: 'path::String',
    description: 'Path to the cache file or directory'
  }, {
    option: 'rule',
    type: '[String]',
    concatRepeatedArrays: true,
    description: 'Only show results for specified rule(s)'
  }, {
    option: 'warnings',
    type: 'Boolean',
    default: 'true',
    description: 'include warning results'
  }]
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9jb25maWcvb3B0aW9ucy5qcyJdLCJuYW1lcyI6WyJwcmVwZW5kIiwib3B0aW9ucyIsImhlYWRpbmciLCJvcHRpb24iLCJhbGlhcyIsInR5cGUiLCJkZXNjcmlwdGlvbiIsImRlZmF1bHQiLCJjb25jYXRSZXBlYXRlZEFycmF5cyJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7QUFJQTs7QUFFQTtBQUNBO0FBQ0E7Ozs7OztBQUVBOzs7Ozs7QUFFQTtBQUNBO0FBQ0E7OztrQkFHZSwwQkFBVztBQUN4QkEsV0FBUyxzQ0FEZTtBQUV4QkMsV0FBUyxDQUFDO0FBQ1JDLGFBQVM7QUFERCxHQUFELEVBRU47QUFDREMsWUFBYSxNQURaO0FBRURDLFdBQWEsR0FGWjtBQUdEQyxVQUFhLFNBSFo7QUFJREMsaUJBQWE7QUFKWixHQUZNLEVBT047QUFDREgsWUFBYSxTQURaO0FBRURDLFdBQWEsR0FGWjtBQUdEQyxVQUFhLFNBSFo7QUFJREMsaUJBQWE7QUFKWixHQVBNLEVBWU47QUFDREgsWUFBYSxLQURaO0FBRURFLFVBQWEsVUFGWjtBQUdERSxhQUFhLEtBSFo7QUFJREQsaUJBQWE7QUFKWixHQVpNLEVBaUJOO0FBQ0RILFlBQWEsUUFEWjtBQUVEQyxXQUFhLEdBRlo7QUFHREMsVUFBYSxjQUhaO0FBSURDLGlCQUFhO0FBSlosR0FqQk0sRUFzQk47QUFDREgsWUFBYSxPQURaO0FBRURFLFVBQWEsU0FGWjtBQUdERSxhQUFhLE9BSFo7QUFJREQsaUJBQWE7QUFKWixHQXRCTSxFQTJCTjtBQUNESCxZQUFhLGdCQURaO0FBRURFLFVBQWEsY0FGWjtBQUdEQyxpQkFBYTtBQUhaLEdBM0JNLEVBK0JOO0FBQ0RILFlBQXNCLE1BRHJCO0FBRURFLFVBQXNCLFVBRnJCO0FBR0RHLDBCQUFzQixJQUhyQjtBQUlERixpQkFBc0I7QUFKckIsR0EvQk0sRUFvQ047QUFDREgsWUFBYSxVQURaO0FBRURFLFVBQWEsU0FGWjtBQUdERSxhQUFhLE1BSFo7QUFJREQsaUJBQWE7QUFKWixHQXBDTTtBQUZlLENBQVgsQyIsImZpbGUiOiJvcHRpb25zLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAZmlsZW92ZXJ2aWV3IE9wdGlvbnMgY29uZmlndXJhdGlvbiBmb3Igb3B0aW9uYXRvci5cbiAqIEBhdXRob3IgSWFuIFZhblNjaG9vdGVuXG4gKi9cbid1c2Ugc3RyaWN0JztcblxuLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vIFJlcXVpcmVtZW50c1xuLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuaW1wb3J0IG9wdGlvbmF0b3IgZnJvbSAnb3B0aW9uYXRvcic7XG5cbi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyBJbml0aWFsaXphdGlvbiBhbmQgUHVibGljIEludGVyZmFjZVxuLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuXG5leHBvcnQgZGVmYXVsdCBvcHRpb25hdG9yKHtcbiAgcHJlcGVuZDogJ3VzYWdlOiBlc2xpbnQtbmliYmxlIFtmaWxlLmpzXSBbZGlyXScsXG4gIG9wdGlvbnM6IFt7XG4gICAgaGVhZGluZzogJ09wdGlvbnMnXG4gIH0sIHtcbiAgICBvcHRpb24gICAgIDogJ2hlbHAnLFxuICAgIGFsaWFzICAgICAgOiAnaCcsXG4gICAgdHlwZSAgICAgICA6ICdCb29sZWFuJyxcbiAgICBkZXNjcmlwdGlvbjogJ1Nob3cgaGVscCdcbiAgfSwge1xuICAgIG9wdGlvbiAgICAgOiAndmVyc2lvbicsXG4gICAgYWxpYXMgICAgICA6ICd2JyxcbiAgICB0eXBlICAgICAgIDogJ0Jvb2xlYW4nLFxuICAgIGRlc2NyaXB0aW9uOiAnT3V0cHV0cyB0aGUgdmVyc2lvbiBudW1iZXInXG4gIH0sIHtcbiAgICBvcHRpb24gICAgIDogJ2V4dCcsXG4gICAgdHlwZSAgICAgICA6ICdbU3RyaW5nXScsXG4gICAgZGVmYXVsdCAgICA6ICcuanMnLFxuICAgIGRlc2NyaXB0aW9uOiAnU3BlY2lmeSBKYXZhU2NyaXB0IGZpbGUgZXh0ZW5zaW9ucydcbiAgfSwge1xuICAgIG9wdGlvbiAgICAgOiAnY29uZmlnJyxcbiAgICBhbGlhcyAgICAgIDogJ2MnLFxuICAgIHR5cGUgICAgICAgOiAncGF0aDo6U3RyaW5nJyxcbiAgICBkZXNjcmlwdGlvbjogJ1VzZSBjb25maWd1cmF0aW9uIGZyb20gdGhpcyBmaWxlIG9yIHNoYXJlYWJsZSBjb25maWcnXG4gIH0sIHtcbiAgICBvcHRpb24gICAgIDogJ2NhY2hlJyxcbiAgICB0eXBlICAgICAgIDogJ0Jvb2xlYW4nLFxuICAgIGRlZmF1bHQgICAgOiAnZmFsc2UnLFxuICAgIGRlc2NyaXB0aW9uOiAnT25seSBjaGVjayBjaGFuZ2VkIGZpbGVzJ1xuICB9LCB7XG4gICAgb3B0aW9uICAgICA6ICdjYWNoZS1sb2NhdGlvbicsXG4gICAgdHlwZSAgICAgICA6ICdwYXRoOjpTdHJpbmcnLFxuICAgIGRlc2NyaXB0aW9uOiAnUGF0aCB0byB0aGUgY2FjaGUgZmlsZSBvciBkaXJlY3RvcnknXG4gIH0sIHtcbiAgICBvcHRpb24gICAgICAgICAgICAgIDogJ3J1bGUnLFxuICAgIHR5cGUgICAgICAgICAgICAgICAgOiAnW1N0cmluZ10nLFxuICAgIGNvbmNhdFJlcGVhdGVkQXJyYXlzOiB0cnVlLFxuICAgIGRlc2NyaXB0aW9uICAgICAgICAgOiAnT25seSBzaG93IHJlc3VsdHMgZm9yIHNwZWNpZmllZCBydWxlKHMpJ1xuICB9LCB7XG4gICAgb3B0aW9uICAgICA6ICd3YXJuaW5ncycsXG4gICAgdHlwZSAgICAgICA6ICdCb29sZWFuJyxcbiAgICBkZWZhdWx0ICAgIDogJ3RydWUnLFxuICAgIGRlc2NyaXB0aW9uOiAnaW5jbHVkZSB3YXJuaW5nIHJlc3VsdHMnXG4gIH1dXG59KTtcbiJdfQ==